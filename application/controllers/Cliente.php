<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Cliente extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Cliente_model');
        $this->load->helper(array('form', 'url'));
        $this->load->library('form_validation');
        $this->load->helper('security');
        $this->load->library('tank_auth');
        $this->lang->load('tank_auth');
        $this->load->library('mydompdf');
    }

    /*
     * Listing of clientes
     */
    function index()
    {
        $data['clientes'] = $this->Cliente_model->get_all_clientes();
        
        $data['_view'] = 'cliente/index';
        $this->load->view('_template_principal',$data);
    }

    /*
     * Adding a new cliente
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'nombre' => $this->input->post('nombre'),
				'apaterno' => $this->input->post('apaterno'),
				'amaterno' => $this->input->post('amaterno'),
				'fnacimiento' => $this->input->post('fnacimiento'),
				'empresa' => $this->input->post('empresa'),
				'finicio' => $this->input->post('finicio'),
				'telefono' => $this->input->post('telefono'),
				'correo' => $this->input->post('correo'),
				'rfc' => $this->input->post('rfc'),
				'tipopago' => $this->input->post('tipopago'),
				'direccion' => $this->input->post('direccion'),
            );
            
            $cliente_id = $this->Cliente_model->add_cliente($params);
            redirect('fclientes');
        }
        else
        {
            $data['_view'] = 'fclientes';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a cliente
     */
    function edit($id)
    {   
        // check if the cliente exists before trying to edit it
        $data['clientes'] = $this->Cliente_model->get_cliente($id);
        if(isset($data['clientes']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)
            {
                $params = array(
					'nombre' => $this->input->post('nombre'),
					'apaterno' => $this->input->post('apaterno'),
					'amaterno' => $this->input->post('amaterno'),
					'fnacimiento' => $this->input->post('fnacimiento'),
					'empresa' => $this->input->post('empresa'),
					'finicio' => $this->input->post('finicio'),
					'telefono' => $this->input->post('telefono'),
					'correo' => $this->input->post('correo'),
					'rfc' => $this->input->post('rfc'),
					'tipopago' => $this->input->post('tipopago'),
					'direccion' => $this->input->post('direccion'),
                );

                $this->Cliente_model->update_cliente($id,$params);
                redirect('fclientes');
            }
            else
            {
                $data['_view'] = 'cliente/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The cliente you are trying to edit does not exist.');
    }

    /*
     * Deleting cliente
     */
    function remove($id)
    {
        $cliente = $this->Cliente_model->get_cliente($id);

        // check if the cliente exists before trying to delete it
        if(isset($cliente['id']))
        {
            $this->Cliente_model->delete_cliente($id);
            redirect('fclientes');
        }
        else
            show_error('The cliente you are trying to delete does not exist.');
    }

    /*
    * funcion para editar los clientes mediante javascript con json
    */

    public function datafcliente($id)
    {
        echo json_encode($this->Cliente_model->get_cliente($id));
    }

    function pdf($id)
    {
        $data['icli'] = $this->Cliente_model->get_cliente($id);
        $html = $this->load->view('cliente/pdf', $data, true);
        $this->mydompdf -> load_html($html);
        $this->mydompdf->set_paper('A4', 'Portrait');
        $this->mydompdf->render();
        $this->mydompdf->stream("Cliente_".$data['nombre']['apaterno'].".pdf", array("Attachment" => false));

    }


}
